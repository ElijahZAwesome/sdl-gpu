name: CMake All Supported Platforms

on: [push]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
    # Matrix config for all supported platforms
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
    
    - name: Install SDL2
    - if: matrix.os == 'windows-latest'
      run: |
        mkdir c:\projects\libs
        cd c:\projects\libs
        curl https://www.libsdl.org/release/SDL2-devel-2.0.14-VC.zip -O SDL2.zip
        7z x SDL2.zip && ren SDL2-2.0.14 SDL2
    - if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get install libsdl2-dev
    - if: matrix.os == 'macos-latest'
      run: |
        brew install sdl2

    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: cmake -E make_directory ${{github.workspace}}/build

    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      working-directory: ${{github.workspace}}/build
      # Note the current convention is to use the -S and -B options here to specify source 
      # and build directories, but this is only available with CMake 3.13 and higher.  
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_INSTALL_PREFIX=c:\projects\libs\SDL2 -DBUILD_SHARED=ON -DBUILD_STATIC=ON ..

    - name: Build
      working-directory: ${{github.workspace}}/build
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cmake --build .. --config $BUILD_TYPE

    - name: Test
      working-directory: ${{github.workspace}}/build
      shell: bash
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C $BUILD_TYPE
